"use strict";(self.webpackChunk_aws_portage_on_aws_website=self.webpackChunk_aws_portage_on_aws_website||[]).push([[6657],{4471:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var n=o(4848),a=o(8453);const s={sidebar_position:7,title:"Customizations"},i="Customizing and Extending Portage on AWS",l={id:"techdocs/customizations",title:"Customizations",description:"Running locally",source:"@site/docs/techdocs/customizations.md",sourceDirName:"techdocs",slug:"/techdocs/customizations",permalink:"/docs/techdocs/customizations",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Customizations"},sidebar:"tutorialSidebar",previous:{title:"Permissions",permalink:"/docs/techdocs/permission"},next:{title:"DIY",permalink:"/docs/category/diy"}},r={},c=[{value:"Running locally",id:"running-locally",level:2},{value:"How to modify Portage plugins",id:"how-to-modify-portage-plugins",level:2},{value:"How to add or modify software templates",id:"how-to-add-or-modify-software-templates",level:2}];function d(e){const t={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"customizing-and-extending-portage-on-aws",children:"Customizing and Extending Portage on AWS"})}),"\n",(0,n.jsx)(t.h2,{id:"running-locally",children:"Running locally"}),"\n",(0,n.jsx)(t.p,{children:'It is possible to run the Portage UI and Backstage database locally on your workstation via a container runtime such as Docker Desktop. Running locally makes it much faster to customize Portage and see your changes running quickly. Other benefits include restarting or "bouncing" Portage/Backstage easily and clearing out the Backstage database (running on a local container) and starting fresh, without impacting others.'}),"\n",(0,n.jsx)(t.p,{children:"To run the Portage UI and Backstage database locally, use this command:"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"make start-local"})}),"\n",(0,n.jsxs)(t.p,{children:["This command will spin up container images for a local PostgreSQL database and let you view the Portage UI via localhost (e.g. ",(0,n.jsx)(t.a,{href:"http://localhost:3000",children:"http://localhost:3000"}),")."]}),"\n",(0,n.jsxs)(t.p,{children:["NOTE: You need to have run ",(0,n.jsx)(t.code,{children:"make install"})," at least once successfully before the ",(0,n.jsx)(t.code,{children:"make start-local"})," command can be run."]}),"\n",(0,n.jsx)(t.h2,{id:"how-to-modify-portage-plugins",children:"How to modify Portage plugins"}),"\n",(0,n.jsx)(t.p,{children:"If you want to modify any Portage plugins and see the effects of your changes locally, you'll need to do the following:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["Update the ",(0,n.jsx)(t.code,{children:"build-script/backstage-install.sh"})," file and change the value of the ",(0,n.jsx)(t.code,{children:"installMode"})," variable from ",(0,n.jsx)(t.code,{children:"npm"})," to ",(0,n.jsx)(t.code,{children:"from-source"}),". This will make it so that building Portage UI/Backstage will use the plugin code from your local project instead of downloading official Portage plugins from the NPM registry."]}),"\n",(0,n.jsxs)(t.li,{children:["After each change to plugins code, you will need rebuild the plugins and restart your locally-running Backstage instance before you can see the changes show up on your locally running Backstage. To rebuild the plugins, execute ",(0,n.jsx)(t.code,{children:"make backstage-install"}),". To start or restart Backstage, execute ",(0,n.jsx)(t.code,{children:"make start-local"})]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"how-to-add-or-modify-software-templates",children:"How to add or modify software templates"}),"\n",(0,n.jsx)(t.p,{children:"If you want to modify existing Portage (app/resource/environment) templates and test them locally, do the following:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"Make your template changes"}),"\n",(0,n.jsxs)(t.li,{children:["Run this command to deploy your templates so that Backstage will use your latest version when scaffolding:",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.code,{children:"make push-backstage-reference-repo"}),"."]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"You can add your own software templates as well. To do this, you need to let Backstage know about your template so that it can show it in its UI."}),"\n",(0,n.jsxs)(t.p,{children:["Out of the box, Portage defines what templates to use in a file at ",(0,n.jsx)(t.code,{children:"backstage-reference/templates/all-templates.yaml"}),". You can add a reference to your new template in this file."]}),"\n",(0,n.jsxs)(t.p,{children:["The below code snippet shows where the ",(0,n.jsx)(t.code,{children:"all-templates.yaml"})," file is referred to from Backstage configurations file at ",(0,n.jsx)(t.code,{children:"config/app-config.aws-production.yaml"})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"catalog:\n\n  locations:\n    # AWS templates\n    - type: url\n      target: https://${SSM_GITLAB_HOSTNAME}/opa-admin/backstage-reference/-/blob/main/templates/all-templates.yaml\n      rules:\n        - allow: [Location, Template]\n"})})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>l});var n=o(6540);const a={},s=n.createContext(a);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);